* {
  /* box-sizing: border-box; */
  margin: 20px;
  /* padding: 0; */
  box-sizing: border-box;
  /* background-color: orangered; */
  text-align: center;
}
/* box-sizing: border-box özelliği kullanıldığında, belirtilen genişlik ve yükseklik değeri, iç içe geçmiş padding ve border'ları içerecek şekilde hesaplanır. Yani, padding ve border değerleri, toplam genişlik ve yükseklik içinde dahil edilir. */
html,
body {
  margin: 20px;
}
.container {
  /* width: 100%;
  height: 100%; */
  border: 8px solid red;
  background-image: url(./deniz.jpg);
  text-align: center;
  background-size: contain;
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;
}

/* epeat tekararlamaması ıcın no-repaır kullandık

Cover, görüntünün yüksekliğini ekran yüksekliğine sığdırmaya ve genişliğini orantılı olarak uzatmaya çalışacaktır. 

Contain, görüntünün genişliğini ekran genişliğine sığdırmaya ve yüksekliği orantılı olarak uzatmaya çalışacaktır.

görüş alanına ortalamak istediğimi varsayalım. Bunu yapmak için tek yapmam gereken, .container içindeki background-position özelliğine değer olarak center center eklemek*/
.div1 {
  /* border: 5px solid black; */
  /* width: 200px; */
  /* height: 700px; */
  /* margin-top: 50px;
  margin-left: 250px; */
  /* text-align: center; */
  color: blue;
  font-size: larger;
  /* padding-top: 65px; */
  display: flex;
  margin: auto;
}
.none {
  border: 3px solid black;
  text-align: center;
  width: 150px;
  height: 120px;
  padding: 100px;
}

.dotted {
  border: 3px dotted black;
  text-align: center;
  width: 150px;
  height: 120px;
  padding: 100px;
}

.dashed {
  border: 3px dashed black;
  text-align: center;
  width: 150px;
  height: 120px;
  padding: 100px;
}

.div2 {
  width: 200px;
  height: 700px;
  text-align: center;
  color: blue;
  font-size: larger;
  display: flex;
  margin: auto;
}

.div3 {
  width: 200px;
  height: 700px;
  text-align: center;
  color: blue;
  font-size: larger;
  display: flex;
  margin: auto;
}
