/**CSS'de transition özelliği, bir öğenin belirli bir durumdan diğerine geçişlerinin yumuşak olmasını sağlar. Bu geçişler genellikle fare durumu değişiklikleri, boyut değişiklikleri veya renk değişiklikleri gibi etkileşimlerle tetiklenir. transition özelliğini kullanırken, geçişin hangi özellikler üzerinde gerçekleşeceğini ve ne kadar süreceğini belirtmeniz gerekir.
.element {
    transition: property duration timing-function delay;
}
Burada:

property: Geçişin uygulanacağı CSS özelliği veya özellikleri belirtir. Birden fazla özelliği belirtmek için virgülle ayrılır.
duration: Geçişin süresini belirtir. Örneğin, 1s veya 500ms gibi bir süre değeri kullanılabilir.
timing-function: Geçişin hız eğrisini belirtir. Örneğin, ease, linear, ease-in, ease-out, ease-in-out gibi değerler kullanılabilir.
delay: Geçişin başlatılmasını ertelemek için bir süre belirtir. Opsiyoneldir.
.button {
    background-color: blue;
    transition: background-color 0.3s ease;
}

.button:hover {
    background-color: red;
}
Bu örnekte, bir düğmenin arka plan rengi fare üzerine gelindiğinde kırmızıya yumuşak bir geçişle değişir. transition özelliği background-color özelliği üzerinde 0.3 saniyelik bir sürede ease zamanlama fonksiyonu kullanarak uygulanmıştır.

*/

.box {
  background-color: crimson;
  width: 100px;
  height: 50px;
  margin: 2px;
}

.x {
  /* transform: translateX(150px); */
  transition-property: all;
  transition-duration: 2s;
  transition-delay: 300ms; 
  /*delay harketi yapma geçikmesi */
  transition-timing-function: ease-in-out;
}
.x:active {
  transform: translateX(250px);
  background-color: orange;
  width: 300px;
}

.y {
  transition: all 2s ease-in-out;
}

.y:active {
  background-color: magenta;
  transform: translateY(200px);
  height: 100px;
}

.xy {
  transition-property: all; /*değişikliklerin hangisini takip etsin all dersen active hover hepsini takip eder, transition-property:   background-color; dersen sadece rengi değiştirir */
  transition-duration: 2s;
}

.xy:active {
  transform: translate(100px, 50px);
  background-color: blue;
  width: 200px;
  height: 100px;
}

.btn-div {
  text-align: center;
}

.btn {
  background-color: aqua;
  padding: 20px;
  border-radius: 5px;
  border: none;
  font-size: 1.3rem;
  /* transition-property:  background-color ;
    transition-duration: 1s; */
  transition: all 200ms ease-in-out;
  /* all demek butonla ılgılı tum degısıklıkleerı uygula demek  all yerıne transform yazarsanız sadece transformu takıp eder*/
}

.btn:active {
  background-color: red;
  color: wheat;
  transform: scale(85%);
}
/*  Active: Bir öğe tıklanarak etkinleştirildiğinde uygulanır. Örneğin, bir düğme tıklandığında rengini veya boyutunu değiştirmek için active pseudo-sınıfını kullanabilirsiniz. Örneğin: button:active {
    transform: scale(0.9); /* Düğmeyi küçültmek 
} 
Hover: Bir öğe üzerine fare imleci hareket ettirildiğinde etkileşimli davranışları tanımlar. Örneğin, bir düğmenin rengini değiştirmek veya altını çizmek için hover pseudo-sınıfını kullanabilirsiniz. Örneğin:
button:hover {
    background-color: #ff0000; 
    /* Kırmızı arka plan rengi color: #ffffff;  Beyaz metin rengi
}
*/
